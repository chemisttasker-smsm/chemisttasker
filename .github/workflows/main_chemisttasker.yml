name: Deploy Django Backend to Azure Web App - chemisttasker

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'Production'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Export environment variables
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "WEBSITE_HOSTING=${{ secrets.WEBSITE_HOSTING }}" >> $GITHUB_ENV
          echo "AZURE_POSTGRESQL_CONNECTIONSTRING=${{ secrets.AZURE_POSTGRESQL_CONNECTIONSTRING }}" >> $GITHUB_ENV
          echo "DJANGO_SETTINGS_MODULE=core.deployment" >> $GITHUB_ENV
          echo "AZURE_ACCOUNT_NAME=${{ secrets.AZURE_ACCOUNT_NAME }}" >> $GITHUB_ENV
          echo "AZURE_ACCOUNT_KEY=${{ secrets.AZURE_ACCOUNT_KEY }}" >> $GITHUB_ENV
          echo "AZURE_CONTAINER=${{ secrets.AZURE_CONTAINER }}" >> $GITHUB_ENV
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> $GITHUB_ENV
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> $GITHUB_ENV
          echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> $GITHUB_ENV
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> $GITHUB_ENV
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> $GITHUB_ENV
          echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" >> $GITHUB_ENV
          echo "AZURE_OCR_ENDPOINT=${{ secrets.AZURE_OCR_ENDPOINT }}" >> $GITHUB_ENV
          echo "AZURE_OCR_KEY=${{ secrets.AZURE_OCR_KEY }}" >> $GITHUB_ENV
          echo "SCRAPINGBEE_API_KEY=${{ secrets.SCRAPINGBEE_API_KEY }}" >> $GITHUB_ENV
          echo "MOBILEMESSAGE_USERNAME=${{ secrets.MOBILEMESSAGE_USERNAME }}" >> $GITHUB_ENV
          echo "MOBILEMESSAGE_PASSWORD=${{ secrets.MOBILEMESSAGE_PASSWORD }}" >> $GITHUB_ENV
          echo "MOBILEMESSAGE_SENDER=${{ secrets.MOBILEMESSAGE_SENDER }}" >> $GITHUB_ENV
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> $GITHUB_ENV

      # Local venv only to run manage.py tasks pre-deploy; runtime will use Azure's env
      - name: Install dependencies and prepare app
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r backend/requirements.txt

          cd backend
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput
          cd ..

      - name: Make startup.sh executable
        run: chmod +x backend/startup.sh

      - name: Zip backend app for deployment
        run: |
          cd backend
          zip -r ../release.zip .

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Wait to avoid SCM conflicts
        run: sleep 60

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'chemisttasker'
          slot-name: 'Production'
          package: release.zip

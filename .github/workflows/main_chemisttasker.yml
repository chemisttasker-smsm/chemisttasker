name: Deploy Django Backend to Azure Web App - chemisttasker

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    # All secrets are set as environment variables for the job's steps to use
    env:
      DJANGO_SETTINGS_MODULE: core.deployment
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      WEBSITE_HOSTING: ${{ secrets.WEBSITE_HOSTING }}
      AZURE_POSTGRESQL_CONNECTIONSTRING: ${{ secrets.AZURE_POSTGRESQL_CONNECTIONSTRING }}
      AZURE_ACCOUNT_NAME: ${{ secrets.AZURE_ACCOUNT_NAME }}
      AZURE_ACCOUNT_KEY: ${{ secrets.AZURE_ACCOUNT_KEY }}
      AZURE_CONTAINER: ${{ secrets.AZURE_CONTAINER }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
      AZURE_OCR_ENDPOINT: ${{ secrets.AZURE_OCR_ENDPOINT }}
      AZURE_OCR_KEY: ${{ secrets.AZURE_OCR_KEY }}
      SCRAPINGBEE_API_KEY: ${{ secrets.SCRAPINGBEE_API_KEY }}
      MOBILEMESSAGE_USERNAME: ${{ secrets.MOBILEMESSAGE_USERNAME }}
      MOBILEMESSAGE_PASSWORD: ${{ secrets.MOBILEMESSAGE_PASSWORD }}
      MOBILEMESSAGE_SENDER: ${{ secrets.MOBILEMESSAGE_SENDER }}
      REDIS_URL: ${{ secrets.REDIS_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies, Migrate, and Collect Static
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r backend/requirements.txt
          cd backend
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput

      - name: Zip backend app for deployment
        run: |
          zip -r release.zip venv/
          cd backend
          zip -r ../release.zip .

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'chemisttasker'
          package: release.zip
          # This tells Azure not to run its own build, preventing the 409 Conflict error.
          scm-do-build-during-deployment: false